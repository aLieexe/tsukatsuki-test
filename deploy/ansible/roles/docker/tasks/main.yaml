- name: Ensures docker dependency is installed
  ansible.builtin.apt:
    name: 
      - ca-certificates
      - curl
      - gnupg
      - lsb-release

- name: Create direactory for apt keyrings
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'


- name: Download Docker's official GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/debian/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'
    force: yes

- name: Ensure /etc/docker/ directory exists.
  file:
    path: /etc/docker
    state: directory
    mode: '0755'

- name: Add Docker to apt repo
  ansible.builtin.apt_repository:
    repo: "deb [arch={{ docker_apt_arch }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian {{ ansible_lsb.codename }} stable"
    state: present
    filename: docker
  notify: Update apt cache
    
- name: Install docker 
  become: yes
  ansible.builtin.apt:
    pkg:
      - docker-ce
      - docker-ce-cli 
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present

- name: add the current user to docker group
  ansible.builtin.user:
    name: "{{ hostvars['deploy_user'].ansible_user }}"
    groups: docker
    append: yes
  notify: Restart docker

- name: Copy docker daemon json
  ansible.builtin.copy:
    src: daemon.json
    dest: /etc/docker/daemon.json
    owner: "{{ hostvars['deploy_user'].ansible_user }}"
    group: "{{ hostvars['deploy_user'].ansible_user }}"
    mode: '0644'

- name: ensure docker service is started and enabled
  ansible.builtin.service:
    name: docker
    state: started
    enabled: yes

- name: Get docker service status
  ansible.builtin.command: systemctl is-active docker
  register: docker_status
  changed_when: false
  failed_when: false

- name: Display docker service status
  ansible.builtin.debug:
    msg: "Docker service status: {{ docker_status.stdout }}"