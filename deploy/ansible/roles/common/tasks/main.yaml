- name: Update dependency cache
  ansible.builtin.apt:
    update_cache: yes
    upgrade: dist

- name: Install essential packages
  ansible.builtin.apt:
    name: 
      - git
      - gnupg
      - make
      - ufw
      - curl
      - rsync
    state: present

- name: Enable timedatectl ntp
  ansible.builtin.service:
    name: systemd-timesyncd.service
    enabled: yes


- name: Configure UFW to allow SSH, HTTP, and HTTPS
  community.general.ufw:
    rule: allow
    proto: tcp
    port: '{{item}}'
  loop: 
    - '80'
    - '443'
    - '22'

- name: Enable UFW
  community.general.ufw:
    state: enabled

- name: Create a user
  ansible.builtin.user:
    name: "{{ hostvars['deploy_user'].ansible_user }}"
    create_home: yes
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa
    # We need this to give it actual shell 
    shell: /bin/bash
  register: user_info

- name: Show what was returned
  debug:
    var: user_info

- name: Set authorized key taken from file
  ansible.posix.authorized_key:
    user: "{{ hostvars['deploy_user'].ansible_user }}"
    state: present
    key: "{{ user_info.ssh_public_key }}"

- name: Fetch private key to manager
  ansible.builtin.fetch:
    src: "/home/{{ hostvars['deploy_user'].ansible_user }}/.ssh/id_rsa"
    dest: "{{ playbook_dir }}/key/{{ hostvars['deploy_user'].ansible_user }}"
    flat: yes

- name: Fetch public key to manager
  ansible.builtin.fetch:
    src: "/home/{{ hostvars['deploy_user'].ansible_user }}/.ssh/id_rsa.pub"
    dest: "{{ playbook_dir }}/key/{{ hostvars['deploy_user'].ansible_user }}.pub"
    flat: yes

- name: Set permissions on fetched private key
  ansible.builtin.file:
    path: "{{ playbook_dir }}/key/{{ hostvars['deploy_user'].ansible_user }}"
    mode: '0600'
  delegate_to: localhost

- name: Set permissions on fetched public key
  ansible.builtin.file:
    path: "{{ playbook_dir }}/key/{{ hostvars['deploy_user'].ansible_user }}.pub"
    mode: '0644'
  delegate_to: localhost